"use strict";var __defProp=Object.defineProperty,__name=(target,value)=>__defProp(target,"name",{value,configurable:!0});exports.id=7089,exports.ids=[7089],exports.modules={7089:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{startFocusVisible:()=>startFocusVisible});const FOCUS_KEYS=["Tab","ArrowDown","Space","Escape"," ","Shift","Enter","ArrowLeft","ArrowRight","ArrowUp"],startFocusVisible=__name(()=>{let currentFocus=[],keyboardMode=!0;const doc=document,setFocus=__name(elements=>{currentFocus.forEach(el=>el.classList.remove("ion-focused")),elements.forEach(el=>el.classList.add("ion-focused")),currentFocus=elements},"setFocus"),pointerDown=__name(()=>{keyboardMode=!1,setFocus([])},"pointerDown");doc.addEventListener("keydown",ev=>{keyboardMode=FOCUS_KEYS.includes(ev.key),keyboardMode||setFocus([])}),doc.addEventListener("focusin",ev=>{if(keyboardMode&&ev.composedPath){const toFocus=ev.composedPath().filter(el=>!!el.classList&&el.classList.contains("ion-focusable"));setFocus(toFocus)}}),doc.addEventListener("focusout",()=>{doc.activeElement===doc.body&&setFocus([])}),doc.addEventListener("touchstart",pointerDown),doc.addEventListener("mousedown",pointerDown)},"startFocusVisible")}};